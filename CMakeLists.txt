#
# wxImg2Pdf
#
CMAKE_MINIMUM_REQUIRED(VERSION 3.24)
CMAKE_POLICY(SET CMP0063 NEW)
CMAKE_POLICY(SET CMP0135 NEW)

SET(CMAKE_C_STANDARD 11)
SET(CMAKE_C_STANDARD_REQUIRED ON)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

PROJECT(wxImg2Pdf VERSION 1.0.0.0)
SET(IMG2PDF_BASE_DIR ${CMAKE_CURRENT_SOURCE_DIR})

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

# Test 32/64 bits
if("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
    SET( EX_PLATFORM 64 )
    SET( EX_PLATFORM_NAME "x64" )
else("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
	SET( EX_PLATFORM 32 )
    SET( EX_PLATFORM_NAME "x86" )
endif("${CMAKE_SIZEOF_VOID_P}" EQUAL "8")
MESSAGE(STATUS "Target platform: ${EX_PLATFORM_NAME}")

SET(PROJECT_VERSION_STR "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH} ${EX_PLATFORM_NAME}")
SET(PROJECT_VERSION_STR4 "${PROJECT_VERSION_MAJOR}, ${PROJECT_VERSION_MINOR}, ${PROJECT_VERSION_PATCH}, ${PROJECT_VERSION_TWEAK}")
SET(PROJECT_VERSION_STR4_DOTTED ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_TWEAK})

SET(PROJECT_INC_DIR ${PROJECT_BINARY_DIR}/include)
SET(PROJECT_CONFIG_FILE ${PROJECT_INC_DIR}/app_config.h)

FILE(MAKE_DIRECTORY ${PROJECT_INC_DIR})
CONFIGURE_FILE(
	${PROJECT_SOURCE_DIR}/app_config.h.in
	${PROJECT_CONFIG_FILE}
)
INCLUDE_DIRECTORIES(${PROJECT_INC_DIR})

IF(MSVC)
	SET(CMAKE_DEBUG_POSTFIX d)
ENDIF()

# external libraries
INCLUDE(ExternalLibraries.cmake)

# GNU

IF(DEFINED MINGW_CFG_FILE)
	MESSAGE(STATUS "MinGW configuration: ${MINGW_CFG_FILE}")
	INCLUDE(${MINGW_CFG_FILE})
	INSTALL(
		IMPORTED_RUNTIME_ARTIFACTS GNU_gcc GNU_stdcxx
		DESTINATION img2pdf
		COMPONENT img2pdf
	)
ENDIF()

# wxWidgets

FUNCTION(ConfigureWxWidgetsUsage Target)
	TARGET_LINK_LIBRARIES(${Target} PRIVATE wxWidgets)
ENDFUNCTION()

IF(NOT DEFINED WXWIDGETS_CFG_FILE)
	MESSAGE(FATAL_ERROR "WXWIDGETS_CFG_FILE not defined")
ENDIF()

MESSAGE(STATUS "wxWidgets configuration: ${WXWIDGETS_CFG_FILE}")
INCLUDE(${WXWIDGETS_CFG_FILE})
IF(NOT MINGW)
	INSTALL(
		IMPORTED_RUNTIME_ARTIFACTS WX_core WX_base WX_xml
		DESTINATION img2pdf
		COMPONENT img2pdf
	)
ENDIF()
ADD_LIBRARY(wxWidgets INTERFACE)
SET(wxWidgets_LIBRARIES 
	WX_core	WX_base WX_xml WX_jpeg WX_png WX_tiff WX_zlib WX_regexu WX_expat
	comctl32 uuid oleacc uxtheme rpcrt4 shlwapi version wsock32)
MESSAGE(DEBUG "wxWidgets libs: ${wxWidgets_LIBRARIES}")
TARGET_LINK_LIBRARIES(wxWidgets INTERFACE ${wxWidgets_LIBRARIES})

# -------------------------------------------------------------

SET(IMG2PDF_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/inc)

FUNCTION(ConfigureWxApp TargetName)
	TARGET_PRECOMPILE_HEADERS(${TargetName} PRIVATE StdWx.h)
	TARGET_INCLUDE_DIRECTORIES(${TargetName} PRIVATE ${IMG2PDF_INCLUDE_DIR})
ENDFUNCTION()

FUNCTION(ConfigureSourceEncoding TargetName)
	TARGET_COMPILE_OPTIONS(${TargetName} PRIVATE
		"$<$<CXX_COMPILER_ID:MSVC>:/utf-8>"
		"$<$<CXX_COMPILER_ID:GNU>:-finput-charset=UTF-8>"
		"$<$<CXX_COMPILER_ID:GNU>:-ffile-prefix-map=${PROJECT_BINARY_DIR}=.>"
	)
ENDFUNCTION()

ADD_COMPILE_DEFINITIONS("UNICODE" "_UNICODE")

ADD_SUBDIRECTORY(wxEncodingDetection)
TARGET_INCLUDE_DIRECTORIES(wxEncodingDetection PRIVATE ${IMG2PDF_INCLUDE_DIR})

ADD_SUBDIRECTORY(wxCmdTools)
TARGET_INCLUDE_DIRECTORIES(wxCmdTools PRIVATE ${IMG2PDF_INCLUDE_DIR})

ADD_SUBDIRECTORY(js)
ADD_SUBDIRECTORY(license)
ADD_SUBDIRECTORY(gui)
ADD_SUBDIRECTORY(icons)
ADD_SUBDIRECTORY(cpack/7-zip)
ADD_SUBDIRECTORY(cpack/sumatra-pdf)

INCLUDE(cpack/Installer.cmake)
